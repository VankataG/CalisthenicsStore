@page
@model IndexModel
@{
    ViewData["Title"] = "My Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
    var user = Model.Profile;
}

<style>
    :root {
        --bg: #0e0f12;
        --panel: #14161c;
        --panel-2: #191c22;
        --text: #e7e9ee;
        --muted: #9aa3b2;
        --brand: #4c8dff;
        --ok: #22c55e;
        --warn: #f59e0b;
        --err: #ef4444;
        --ring: 0 0 0 0.12rem rgba(76,141,255,.45);
        --radius: 18px;
        --shadow: 0 8px 30px rgba(0,0,0,.45);
    }

    * {
        box-sizing: border-box;
    }

    html, body {
        height: 100%;
        background: radial-gradient(1200px 900px at 20% -10%, #1b2030 0%, var(--bg) 55%), var(--bg);
    }

    body {
        margin: 0;
        font-family: ui-sans-serif, system-ui, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji","Segoe UI Emoji";
        color: var(--text);
    }

    .wrap {
        max-width: 1100px;
        margin: 64px auto;
        padding: 0 20px;
    }

    .card {
        background: linear-gradient(180deg, var(--panel) 0%, var(--panel-2) 100%);
        border: 1px solid #232733;
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        overflow: hidden;
    }

    .hero {
        position: relative;
        padding: 40px 32px 28px;
        display: grid;
        grid-template-columns: 112px 1fr auto;
        gap: 24px;
        align-items: center;
        background: radial-gradient(600px 300px at -10% -30%, rgba(76,141,255,.18), transparent 60%), radial-gradient(500px 300px at 120% -40%, rgba(255,76,139,.20), transparent 60%);
    }

    .avatar {
        width: 112px;
        height: 112px;
        border-radius: 18px;
        background: linear-gradient(135deg, #2a2e39, #1c1f27);
        border: 1px solid #2b3040;
        display: grid;
        place-items: center;
        font-weight: 700;
        font-size: 36px;
        color: #c5cbe0;
    }

    .name {
        display: flex;
        flex-direction: column;
        gap: 6px;
    }

        .name h1 {
            margin: 0;
            font-size: 34px;
            letter-spacing: .2px;
        }

        .name .sub {
            color: var(--muted);
            font-size: 14px;
        }

    .actions {
        display: flex;
        gap: 10px;
    }

    .btn {
        appearance: none;
        border: 1px solid #2a3142;
        color: var(--text);
        background: #1a1e27;
        padding: 10px 14px;
        border-radius: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: transform .08s ease, box-shadow .2s ease, border-color .2s ease, background .2s ease;
    }

        .btn:hover {
            border-color: #3b4357;
            transform: translateY(-1px);
        }

        .btn:focus {
            outline: none;
            box-shadow: var(--ring);
        }

        .btn.primary {
            background: linear-gradient(180deg, #366bff, #2e5ae6);
            border-color: #2e5ae6;
        }

            .btn.primary:hover {
                background: linear-gradient(180deg, #3b74ff, #2e50d1);
            }

    .grid {
        display: grid;
        gap: 18px;
        padding: 24px;
        grid-template-columns: 1fr 1fr;
    }
    @@media (max-width:900px) {
        .hero

    {
        grid-template-columns: 88px 1fr;
    }

    .actions {
        grid-column: 1 / -1;
    }

    .grid {
        grid-template-columns: 1fr;
    }

    }

    .panel {
        padding: 22px;
        border: 1px solid #232733;
        border-radius: 14px;
        background: #141821;
    }

        .panel h3 {
            margin: 0 0 14px;
            font-size: 16px;
            letter-spacing: .3px;
            color: #d6dae6;
        }

    .kv {
        display: grid;
        grid-template-columns: 180px 1fr;
        gap: 10px 14px;
    }

        .kv .k {
            color: var(--muted);
        }

        .kv .v {
            color: var(--text);
        }

    .badges {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .badge {
        padding: 6px 10px;
        border-radius: 999px;
        font-size: 12px;
        font-weight: 600;
        border: 1px solid #2a3142;
        background: #121620;
        color: #c9d1e4;
    }

    .state {
        display: flex;
        gap: 10px;
        align-items: center;
        padding: 10px 12px;
        border-radius: 12px;
        background: #10141d;
        border: 1px solid #232733;
    }

    .dot {
        width: 10px;
        height: 10px;
        border-radius: 999px;
    }

        .dot.ok {
            background: var(--ok);
        }

        .dot.warn {
            background: var(--warn);
        }

        .dot.err {
            background: var(--err);
        }

    .muted {
        color: var(--muted);
    }

    .divider {
        height: 1px;
        background: #222635;
        margin: 0 24px;
        opacity: .7;
    }
</style>

<div class="wrap">
    <div class="card">
        <!-- Header / identity -->
        <section class="hero">
            <div class="avatar">
                @* Fallback initials *@
                @{
                    var initials = string.Join("", new[]{
                (user.FirstName).Trim().FirstOrDefault(),
                (user.LastName).Trim().FirstOrDefault()
                }).ToUpper();
                }
                @initials
            </div>

            <div class="name">
                <h1>@(user.FirstName) @(user.LastName)</h1>
                <div class="sub">
                    <span>@user.UserName</span> •
                    <span>@user.Email</span>
                    @if (user?.EmailConfirmed == true)
                    {
                        <span class="badge" style="margin-left:.5rem;">Email confirmed</span>
                    }
                    else
                    {
                        <span class="badge" style="margin-left:.5rem; border-color:#3e2a2a; background:#1b1313;">Email not confirmed</span>
                    }
                </div>
            </div>

            <div class="actions">
                <a class="btn" asp-area="Identity" asp-page="/Account/Manage/Email">Change Email</a>
                <a class="btn" asp-area="Identity" asp-page="/Account/Manage/Phone">Update Phone</a>
                <a class="btn" asp-area="Identity" asp-page="/Account/Manage/TwoFactorAuthentication">2FA</a>
                <a class="btn primary" asp-area="Identity" asp-page="/Account/Manage/Index">Edit Profile</a>
            </div>
        </section>

        <div class="divider"></div>

        <!-- Content -->
        <section class="grid">

            <!-- Personal -->
            <div class="panel">
                <h3>Personal</h3>
                <div class="kv">
                    <div class="k">First name</div><div class="v">@user?.FirstName</div>
                    <div class="k">Last name</div><div class="v">@user?.LastName</div>
                    <div class="k">Email</div><div class="v">@user?.Email</div>
                    <div class="k">Phone</div><div class="v">@user?.PhoneNumber ?? "<span class='muted'>—</span>"</div>
                    <div class="k">User ID</div><div class="v"><span class="muted">@user?.Id</span></div>
                </div>
            </div>

            <!-- Account status -->
            <div class="panel">
                <h3>Security & Status</h3>
                <div class="kv">
                    <div class="k">Two-factor</div>
                    <div class="v">
                        <div class="state">
                            <span class="dot @(user?.TwoFactorEnabled==true ? "ok" : "warn")"></span>
                            @(user?.TwoFactorEnabled == true ? "Enabled" : "Disabled")
                        </div>
                    </div>

                    <div class="k">Lockout</div>
                    <div class="v">
                        <div class="state">
                            <span class="dot @(user?.LockoutEnabled==true ? "warn" : "ok")"></span>
                            @(user?.LockoutEnabled == true ? $"Enabled {(user?.LockoutEnd != null ? $"(until {user.LockoutEnd:g})" : "")}" : "Not active")
                        </div>
                    </div>

                    <div class="k">Failed sign-ins</div>
                    <div class="v"><span class="badge">@user?.AccessFailedCount</span></div>

                    <div class="k">Email</div>
                    <div class="v">
                        <div class="state">
                            <span class="dot @(user?.EmailConfirmed==true ? "ok" : "warn")"></span>
                            @(user?.EmailConfirmed == true ? "Confirmed" : "Not confirmed")
                        </div>
                    </div>

                    <div class="k">Phone</div>
                    <div class="v">
                        <div class="state">
                            <span class="dot @(user?.PhoneNumberConfirmed==true ? "ok" : "warn")"></span>
                            @(user?.PhoneNumberConfirmed == true ? "Confirmed" : "Not confirmed")
                        </div>
                    </div>
                </div>
            </div>

            <!-- Roles / Claims -->
            <div class="panel">
                <h3>Roles</h3>
                <div class="badges">
                    @if (user?.Roles != null && user.Roles.Any())
                    {
                        foreach (var r in user.Roles)
                        {
                            <span class="badge">@r</span>
                        }
                    }
                    else
                    {
                        <span class="muted">No roles assigned</span>
                    }
                </div>
            </div>

            <!-- Quick actions -->
            <div class="panel">
                <h3>Quick actions</h3>
                <div style="display:flex; gap:12px; flex-wrap:wrap;">
                    <a class="btn" asp-area="Identity" asp-page="/Account/Manage/ChangePassword">Change password</a>
                    <a class="btn" asp-area="Identity" asp-page="/Account/Manage/TwoFactorAuthentication">Manage 2FA</a>
                    <a class="btn" asp-area="Identity" asp-page="/Account/Manage/PersonalData">Download personal data</a>
                    <a class="btn" asp-area="Identity" asp-page="/Account/Manage/PersonalData">Delete account</a>
                </div>
            </div>

        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
